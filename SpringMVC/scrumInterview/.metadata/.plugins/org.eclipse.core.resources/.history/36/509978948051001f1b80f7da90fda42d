package com.example.demo;


import java.io.File;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ConfigurableApplicationContext;

import com.example.demo.entity.Student;
import com.example.demo.repository.StudentRepo;


@SpringBootApplication
public class MarshellingUnMarshellingProjectApplication {

    public static void main(String[] args) {
        ConfigurableApplicationContext context = SpringApplication.run(MarshellingUnMarshellingProjectApplication.class, args);
        StudentRepo studentRepo = context.getBean(StudentRepo.class);

        // Retrieving data from the database
        List<Student> studentList = studentRepo.findAll();

        try {
            // Create JAXB context and marshaller
            JAXBContext jaxbContext = JAXBContext.newInstance(Student.class);
            Marshaller marshaller = jaxbContext.createMarshaller();
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);

            // Marshall each student object to XML
            for (Student student : studentList) {
                marshaller.marshal(student, System.out); // Print to console
                marshaller.marshal(student, new File("student_" + student.getId() + ".xml")); // Save to file
            }
        } catch (JAXBException e) {
            // Handle JAXB exception
            System.err.println("Error occurred during JAXB marshalling: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            // Handle any other exceptions
            System.err.println("An unexpected error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
dent(102, "Vignesh", "Vijayawada", 28);
		Student sm3 = new Student(103, "Rajesh", "Karimnagar", 24);
		Student sm4 = new Student(104, "Gopi", "Khammam", 26);
		List<Student> students = Arrays.asList(sm1, sm2, sm3, sm4);
		bean.saveAll(students);

		List<Student> all = bean.findAll();
		JAXBContext jaxbContext = JAXBContext.newInstance(Student.class);
		Marshaller marshaller =  jaxbContext.createMarshaller();
		marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);

		for (Student student : students) {
			marshaller.marshal(student, System.out);
			marshaller.marshal(students, new File("Student.xml"));

		}
	}

}
